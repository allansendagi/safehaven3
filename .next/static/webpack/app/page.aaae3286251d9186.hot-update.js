"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/components/SelfCorrectionVisualization.tsx":
/*!********************************************************!*\
  !*** ./src/components/SelfCorrectionVisualization.tsx ***!
  \********************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var d3__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3 */ \"(app-pages-browser)/./node_modules/d3/src/index.js\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\nconst SelfCorrectionVisualization = ()=>{\n    _s();\n    const svgRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (!svgRef.current) return;\n        // Clear any previous content\n        d3__WEBPACK_IMPORTED_MODULE_2__.select(svgRef.current).selectAll(\"*\").remove();\n        const width = svgRef.current.clientWidth;\n        const height = 350; // Increased height for better visualization\n        // Create SVG\n        const svg = d3__WEBPACK_IMPORTED_MODULE_2__.select(svgRef.current).attr(\"width\", width).attr(\"height\", height);\n        // Define the center point and radius for the circular flow\n        const centerX = width / 2;\n        const centerY = height / 2;\n        const radius = Math.min(width, height) / 3;\n        // Create a group for the visualization\n        const vizGroup = svg.append(\"g\").attr(\"transform\", \"translate(\".concat(centerX, \", \").concat(centerY, \")\"));\n        // Add a subtle background circle for the entire framework\n        vizGroup.append(\"circle\").attr(\"r\", radius + 80).attr(\"fill\", \"#f8fafc\").attr(\"stroke\", \"#e2e8f0\").attr(\"stroke-width\", 1);\n        // Define the three stages of the self-correction process\n        const stages = [\n            {\n                id: \"diagnosis\",\n                name: \"Diagnosis\",\n                description: \"SRI flags weak points\",\n                color: \"#3B82F6\",\n                icon: \"M9 5H7a2 2 0 00-2 2v12a2 2 0 002 2h10a2 2 0 002-2V7a2 2 0 00-2-2h-2M9 5a2 2 0 002 2h2a2 2 0 002-2M9 5a2 2 0 012-2h2a2 2 0 012 2\",\n                pillar: \"SRI\",\n                iconScale: 1.5\n            },\n            {\n                id: \"intervention\",\n                name: \"Intervention\",\n                description: \"Targeted programs & policies\",\n                color: \"#10B981\",\n                icon: \"M11 4a2 2 0 114 0v1a1 1 0 001 1h3a1 1 0 011 1v3a1 1 0 01-1 1h-1a2 2 0 100 4h1a1 1 0 011 1v3a1 1 0 01-1 1h-3a1 1 0 01-1-1v-1a2 2 0 10-4 0v1a1 1 0 01-1 1H7a1 1 0 01-1-1v-3a1 1 0 00-1-1H4a2 2 0 110-4h1a1 1 0 001-1V7a1 1 0 011-1h3a1 1 0 001-1V4\",\n                pillar: \"AI TownSquare\",\n                iconScale: 1.2\n            },\n            {\n                id: \"remeasurement\",\n                name: \"Re-measurement\",\n                description: \"Recalculate SRI scores\",\n                color: \"#EC4899\",\n                icon: \"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\",\n                pillar: \"Readiness Institute\",\n                iconScale: 1.5\n            }\n        ];\n        // Calculate positions for each stage (equally spaced around a circle)\n        const angleStep = 2 * Math.PI / stages.length;\n        stages.forEach((stage, i)=>{\n            const angle = i * angleStep - Math.PI / 2; // Start from the top\n            stage[\"x\"] = radius * Math.cos(angle);\n            stage[\"y\"] = radius * Math.sin(angle);\n        });\n        // Draw connecting arrows between stages (circular flow)\n        // Create separate arcs for each segment to avoid criss-crossing\n        stages.forEach((stage, i)=>{\n            const nextIndex = (i + 1) % stages.length;\n            const currentAngle = i * angleStep - Math.PI / 2;\n            const nextAngle = nextIndex * angleStep - Math.PI / 2;\n            // Create an arc path for this segment\n            const arcPath = d3__WEBPACK_IMPORTED_MODULE_2__.path();\n            arcPath.arc(0, 0, radius, currentAngle, nextAngle);\n            // Draw the arc with the stage's color and make it more visible\n            vizGroup.append(\"path\").attr(\"d\", arcPath.toString()).attr(\"fill\", \"none\").attr(\"stroke\", stage.color).attr(\"stroke-width\", 3).attr(\"stroke-opacity\", 0.6).attr(\"stroke-dasharray\", \"8,4\");\n            // Calculate a point along the arc for the arrowhead\n            const midAngle = (currentAngle + nextAngle) / 2;\n            const arrowX = radius * Math.cos(midAngle);\n            const arrowY = radius * Math.sin(midAngle);\n            // Calculate the angle for the arrowhead\n            const arrowAngle = midAngle + Math.PI / 2;\n            // Draw the arrowhead with the stage's color\n            vizGroup.append(\"polygon\").attr(\"points\", \"0,-8 8,8 -8,8\").attr(\"transform\", \"translate(\".concat(arrowX, \", \").concat(arrowY, \") rotate(\").concat(arrowAngle * 180 / Math.PI, \")\")).attr(\"fill\", stage.color);\n        });\n        // Create stage nodes\n        const stageGroups = vizGroup.selectAll(\".stage\").data(stages).enter().append(\"g\").attr(\"class\", \"stage\").attr(\"transform\", (d)=>\"translate(\".concat(d[\"x\"], \", \").concat(d[\"y\"], \")\"));\n        // Add circular backgrounds for each stage with a subtle glow effect\n        stageGroups.append(\"circle\").attr(\"r\", 40).attr(\"fill\", \"white\").attr(\"stroke\", (d)=>d.color).attr(\"stroke-width\", 4);\n        // Add a subtle shadow/glow effect\n        stageGroups.append(\"circle\").attr(\"r\", 40).attr(\"fill\", (d)=>d.color).attr(\"opacity\", 0.1);\n        // Add icons to each stage - larger and more visible\n        stageGroups.append(\"svg\").attr(\"width\", (d)=>40 * d.iconScale).attr(\"height\", (d)=>40 * d.iconScale).attr(\"x\", (d)=>-20 * d.iconScale).attr(\"y\", (d)=>-20 * d.iconScale).append(\"path\").attr(\"d\", (d)=>d.icon).attr(\"fill\", \"none\").attr(\"stroke\", (d)=>d.color).attr(\"stroke-width\", 3).attr(\"stroke-linecap\", \"round\").attr(\"stroke-linejoin\", \"round\");\n        // Add stage names with larger, more visible text\n        stageGroups.append(\"text\").attr(\"y\", 60).attr(\"text-anchor\", \"middle\").attr(\"font-weight\", \"bold\").attr(\"font-size\", \"16px\").attr(\"fill\", (d)=>d.color).text((d)=>d.name);\n        // Add pillar names with larger text\n        stageGroups.append(\"text\").attr(\"y\", 75).attr(\"text-anchor\", \"middle\").attr(\"font-weight\", \"bold\").attr(\"font-size\", \"14px\").attr(\"fill\", (d)=>d.color).text((d)=>d.pillar);\n        // Add stage descriptions with larger text\n        stageGroups.append(\"text\").attr(\"y\", 90).attr(\"text-anchor\", \"middle\").attr(\"font-size\", \"12px\").attr(\"fill\", \"#64748B\").text((d)=>d.description);\n        // Add central element representing the self-correcting framework\n        // Create a more prominent central element\n        vizGroup.append(\"circle\").attr(\"r\", 50).attr(\"fill\", \"white\").attr(\"stroke\", \"#1E40AF\").attr(\"stroke-width\", 4);\n        // Add a subtle glow effect\n        vizGroup.append(\"circle\").attr(\"r\", 50).attr(\"fill\", \"#1E40AF\").attr(\"opacity\", 0.1);\n        vizGroup.append(\"text\").attr(\"text-anchor\", \"middle\").attr(\"font-weight\", \"bold\").attr(\"font-size\", \"16px\").attr(\"fill\", \"#1E40AF\").attr(\"y\", -20).text(\"Self-Correcting\");\n        vizGroup.append(\"text\").attr(\"text-anchor\", \"middle\").attr(\"font-weight\", \"bold\").attr(\"font-size\", \"16px\").attr(\"fill\", \"#1E40AF\").attr(\"y\", 10).text(\"Framework\");\n        vizGroup.append(\"text\").attr(\"text-anchor\", \"middle\").attr(\"font-size\", \"14px\").attr(\"fill\", \"#64748B\").attr(\"y\", 35).text(\"Closing the readiness gap\");\n        // Add the case study example with improved visibility\n        const caseStudyGroup = svg.append(\"g\").attr(\"transform\", \"translate(\".concat(width - 220, \", \").concat(height - 160, \")\"));\n        // Add a more prominent case study box with a subtle shadow\n        caseStudyGroup.append(\"rect\").attr(\"width\", 500).attr(\"height\", 130).attr(\"rx\", 8).attr(\"ry\", 8).attr(\"fill\", \"white\").attr(\"stroke\", \"#CBD5E1\").attr(\"stroke-width\", 2).attr(\"filter\", \"drop-shadow(0px 4px 6px rgba(0, 0, 0, 0.1))\");\n        caseStudyGroup.append(\"text\").attr(\"x\", 100).attr(\"y\", 25).attr(\"text-anchor\", \"middle\").attr(\"font-weight\", \"bold\").attr(\"font-size\", \"16px\").attr(\"fill\", \"#1E40AF\").text(\"Case Study: City Implementation\");\n        // Diagnosis section with larger text\n        caseStudyGroup.append(\"text\").attr(\"x\", 15).attr(\"y\", 50).attr(\"font-weight\", \"bold\").attr(\"font-size\", \"14px\").attr(\"fill\", \"#3B82F6\").text(\"Diagnosis:\");\n        caseStudyGroup.append(\"text\").attr(\"x\", 15).attr(\"y\", 70).attr(\"font-size\", \"12px\").attr(\"fill\", \"#64748B\").text('SRI flags \"Citizen Empowerment\" and');\n        caseStudyGroup.append(\"text\").attr(\"x\", 15).attr(\"y\", 85).attr(\"font-size\", \"12px\").attr(\"fill\", \"#64748B\").text('\"Economic Adaptability\" as weak points');\n        // Intervention section with larger text\n        caseStudyGroup.append(\"text\").attr(\"x\", 15).attr(\"y\", 105).attr(\"font-weight\", \"bold\").attr(\"font-size\", \"14px\").attr(\"fill\", \"#10B981\").text(\"Intervention:\");\n        caseStudyGroup.append(\"text\").attr(\"x\", 15).attr(\"y\", 120).attr(\"font-size\", \"12px\").attr(\"fill\", \"#64748B\").text(\"AI TownSquare training programs and\");\n        caseStudyGroup.append(\"text\").attr(\"x\", 15).attr(\"y\", 135).attr(\"font-size\", \"12px\").attr(\"fill\", \"#64748B\").text(\"Readiness Institute literacy materials\");\n        // Results section with larger text\n        caseStudyGroup.append(\"rect\").attr(\"x\", 0).attr(\"y\", 145).attr(\"width\", 200).attr(\"height\", 30).attr(\"fill\", \"#EC4899\").attr(\"opacity\", 0.1).attr(\"rx\", 0).attr(\"ry\", 0);\n        caseStudyGroup.append(\"text\").attr(\"x\", 100).attr(\"y\", 165).attr(\"text-anchor\", \"middle\").attr(\"font-weight\", \"bold\").attr(\"font-size\", \"14px\").attr(\"fill\", \"#EC4899\").text(\"Result: SRI Score +16 points in 6 months\");\n        // Add responsive resize handler\n        const resizeVisualization = ()=>{\n            if (!svgRef.current) return;\n            const newWidth = svgRef.current.clientWidth;\n            const newHeight = 500;\n            // Update SVG dimensions\n            svg.attr(\"width\", newWidth).attr(\"height\", newHeight);\n            // Update center point\n            const newCenterX = newWidth / 2;\n            // Update visualization group position\n            vizGroup.attr(\"transform\", \"translate(\".concat(newCenterX, \", \").concat(centerY, \")\"));\n            // Update case study position\n            caseStudyGroup.attr(\"transform\", \"translate(\".concat(newWidth - 220, \", \").concat(newHeight - 160, \")\"));\n        };\n        window.addEventListener(\"resize\", resizeVisualization);\n        return ()=>{\n            window.removeEventListener(\"resize\", resizeVisualization);\n        };\n    }, []);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"w-full h-full\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                ref: svgRef,\n                className: \"w-full h-full\"\n            }, void 0, false, {\n                fileName: \"/Users/AllanSendagi/Downloads/fixed_project/src/components/SelfCorrectionVisualization.tsx\",\n                lineNumber: 331,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"mt-4 text-sm text-gray-700 text-center font-medium\",\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                    children: \"The self-correcting framework ensures that as AI evolves, society adapts—closing the readiness gap one pillar at a time.\"\n                }, void 0, false, {\n                    fileName: \"/Users/AllanSendagi/Downloads/fixed_project/src/components/SelfCorrectionVisualization.tsx\",\n                    lineNumber: 333,\n                    columnNumber: 9\n                }, undefined)\n            }, void 0, false, {\n                fileName: \"/Users/AllanSendagi/Downloads/fixed_project/src/components/SelfCorrectionVisualization.tsx\",\n                lineNumber: 332,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/AllanSendagi/Downloads/fixed_project/src/components/SelfCorrectionVisualization.tsx\",\n        lineNumber: 330,\n        columnNumber: 5\n    }, undefined);\n};\n_s(SelfCorrectionVisualization, \"89Ty783ABEwsfMbSOeu9vscWF34=\");\n_c = SelfCorrectionVisualization;\n/* harmony default export */ __webpack_exports__[\"default\"] = (SelfCorrectionVisualization);\nvar _c;\n$RefreshReg$(_c, \"SelfCorrectionVisualization\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/SelfCorrectionVisualization.tsx\n"));

/***/ })

});